From 88f56b3b9282b9c7f2fd9ebd5e745b19311964db Mon Sep 17 00:00:00 2001
From: Nicholas Chum <nicholaschum@gmail.com>
Date: Sat, 27 Aug 2016 10:56:46 -0400
Subject: [PATCH 23/26] Expose a bool to disable dynamic colors

This commit allows a themer to overlay a boolean value in config.xml to
disable dynamic colors applied to the app title and app icon of each
notification.

PS6:
Separate app title and small icon colors for more flexibility.
Expose hardcoded sender text name.

Change-Id: I3c7828118991ec4fc616011caf073c81f75428b4
Signed-off-by: sub77 <sub77@ymail.com>
---
 core/java/android/app/Notification.java | 23 ++++++++++++++++++++---
 core/res/res/values/du_colors.xml       |  4 +++-
 core/res/res/values/du_config.xml       |  3 +++
 core/res/res/values/du_symbols.xml      |  5 +++++
 4 files changed, 31 insertions(+), 4 deletions(-)

diff --git a/core/java/android/app/Notification.java b/core/java/android/app/Notification.java
index 9f217d4..55029aa 100644
--- a/core/java/android/app/Notification.java
+++ b/core/java/android/app/Notification.java
@@ -29,6 +29,7 @@ import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageManager;
 import android.content.pm.PackageManager.NameNotFoundException;
 import android.content.res.ColorStateList;
+import android.content.res.Resources;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
 import android.graphics.Color;
@@ -3884,7 +3885,7 @@ public class Notification implements Parcelable
         private void processSmallIconColor(Icon smallIcon, RemoteViews contentView) {
             boolean colorable = !isLegacy() || getColorUtil().isGrayscaleIcon(mContext, smallIcon);
             if (colorable) {
-                contentView.setDrawableParameters(R.id.icon, false, -1, resolveContrastColor(),
+                contentView.setDrawableParameters(R.id.icon, false, -1, resolveIconContrastColor(),
                         PorterDuff.Mode.SRC_ATOP, -1);
 
             }
@@ -3901,7 +3902,7 @@ public class Notification implements Parcelable
             if (largeIcon != null && isLegacy()
                     && getColorUtil().isGrayscaleIcon(mContext, largeIcon)) {
                 // resolve color will fall back to the default when legacy
-                contentView.setDrawableParameters(R.id.icon, false, -1, resolveContrastColor(),
+                contentView.setDrawableParameters(R.id.icon, false, -1, resolveIconContrastColor(),
                         PorterDuff.Mode.SRC_ATOP, -1);
             }
         }
@@ -3912,7 +3913,23 @@ public class Notification implements Parcelable
             }
         }
 
+        int getSenderTextColor() {
+            return mContext.getColor(R.color.sender_text_color);
+        }
+
+        int resolveIconContrastColor() {
+            if (!Resources.getSystem().getBoolean(R.bool.config_allowNotificationIconTextTinting)) {
+                return mContext.getColor(R.color.notification_icon_default_color);
+            } else {
+                return resolveContrastColor();
+            }
+        }
+
         int resolveContrastColor() {
+            if (!Resources.getSystem().getBoolean(R.bool.config_allowNotificationIconTextTinting)) {
+                return mContext.getColor(R.color.notification_text_default_color);
+            }
+
             if (mCachedContrastColorIsFor == mN.color && mCachedContrastColor != COLOR_INVALID) {
                 return mCachedContrastColor;
             }
@@ -4915,7 +4932,7 @@ public class Notification implements Parcelable
                         0 /* flags */);
             } else {
                 sb.append(bidi.unicodeWrap(m.mSender),
-                        makeFontColorSpan(Color.BLACK),
+                        makeFontColorSpan(mBuilder.getSenderTextColor()),
                         0 /* flags */);
             }
             CharSequence text = m.mText == null ? "" : m.mText;
diff --git a/core/res/res/values/du_colors.xml b/core/res/res/values/du_colors.xml
index a7316ab..13f0568 100644
--- a/core/res/res/values/du_colors.xml
+++ b/core/res/res/values/du_colors.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <!--
-    Copyright (c) 2016 Projekt Substratum
+    Copyright (c) 2016 Project Substratum
 
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
@@ -21,4 +21,6 @@
     <color name="immersive_cling_text_color">@color/primary_text_default_material_light</color>
     <color name="immersive_cling_button_text_color">@android:color/white</color>
     <color name="app_permission_icon_tint">@android:color/black</color>
+    <color name="notification_text_default_color">@android:color/notification_default_color</color>
+    <color name="sender_text_color">@android:color/black</color>
 </resources>
diff --git a/core/res/res/values/du_config.xml b/core/res/res/values/du_config.xml
index 6c724c3..42a3bd2 100644
--- a/core/res/res/values/du_config.xml
+++ b/core/res/res/values/du_config.xml
@@ -83,4 +83,7 @@
          config to 7. -->
     <integer name="config_deviceHardwareKeys">64</integer>
 
+    <!-- True if the notifications should dynamically tint the app icon and app title -->
+    <bool name="config_allowNotificationIconTextTinting">true</bool>
+
 </resources>
diff --git a/core/res/res/values/du_symbols.xml b/core/res/res/values/du_symbols.xml
index 6326282..07f7fef 100644
--- a/core/res/res/values/du_symbols.xml
+++ b/core/res/res/values/du_symbols.xml
@@ -88,4 +88,9 @@
   <!-- Hardware key binding -->
   <java-symbol type="integer" name="config_deviceHardwareKeys" />
 
+  <!-- Notification icon/text dynamic tint -->
+  <java-symbol type="bool" name="config_allowNotificationIconTextTinting" />
+  <java-symbol type="color" name="notification_text_default_color" />
+  <java-symbol type="color" name="sender_text_color" />
+
 </resources>
-- 
2.1.4

