From 9f109c70958057067500f6065d7b06702336c005 Mon Sep 17 00:00:00 2001
From: George G <kreach3r@users.noreply.github.com>
Date: Mon, 4 Jul 2016 12:07:11 +0300
Subject: [PATCH 8/8] Add filter for Substratum overlays [2/2]

Default behavior is "hidden" substratum overlays,
as they pollute the screen, and you can't notice the
actual apps.
So we follow the current trend set by Android with
"show system" and make it "show overlays" on default.

Change-Id: I1cd4d4d3acd767a87fe402c325a872a4c04e0438
Signed-off-by: sub77 <sub77@ymail.com>
---
 res/menu/manage_apps.xml                           |  8 +++++++
 res/values/du_strings.xml                          |  5 ++++
 .../settings/applications/ManageApplications.java  | 27 +++++++++++++++++++++-
 3 files changed, 39 insertions(+), 1 deletion(-)

diff --git a/res/menu/manage_apps.xml b/res/menu/manage_apps.xml
index 02ee2bb..67f09e5 100644
--- a/res/menu/manage_apps.xml
+++ b/res/menu/manage_apps.xml
@@ -30,6 +30,14 @@
         android:title="@string/menu_hide_system"
         android:showAsAction="never" />
     <item
+        android:id="@+id/show_substratum"
+        android:title="@string/menu_show_substratum"
+        android:showAsAction="never" />
+    <item
+        android:id="@+id/hide_substratum"
+        android:title="@string/menu_hide_substratum"
+        android:showAsAction="never" />
+    <item
         android:id="@+id/sort_order_alpha"
         android:title="@string/sort_order_alpha"
         android:showAsAction="never" />
diff --git a/res/values/du_strings.xml b/res/values/du_strings.xml
index f8fc8b3..78924e2 100644
--- a/res/values/du_strings.xml
+++ b/res/values/du_strings.xml
@@ -193,4 +193,9 @@
     <string name="themes_title">Themes</string>
     <string name="themes_dashboard_summary">Manage Substratum themes</string>
 
+    <!-- Manage applications: show substratum overlays -->
+    <string name="filter_substratum_apps">Substratum overlays</string>
+    <string name="menu_show_substratum">Show overlays</string>
+    <string name="menu_hide_substratum">Hide overlays</string>
+
 </resources>
diff --git a/src/com/android/settings/applications/ManageApplications.java b/src/com/android/settings/applications/ManageApplications.java
index 8355afd..e39119c 100644
--- a/src/com/android/settings/applications/ManageApplications.java
+++ b/src/com/android/settings/applications/ManageApplications.java
@@ -107,6 +107,7 @@ public class ManageApplications extends InstrumentedFragment
 
     private static final String EXTRA_SORT_ORDER = "sortOrder";
     private static final String EXTRA_SHOW_SYSTEM = "showSystem";
+    private static final String EXTRA_SHOW_SUBSTRATUM = "showSubstratum";
     private static final String EXTRA_HAS_ENTRIES = "hasEntries";
     private static final String EXTRA_HAS_BRIDGE = "hasBridge";
 
@@ -138,6 +139,7 @@ public class ManageApplications extends InstrumentedFragment
     public static final int FILTER_APPS_USAGE_ACCESS = 13;
     public static final int FILTER_APPS_WITH_OVERLAY = 14;
     public static final int FILTER_APPS_WRITE_SETTINGS = 15;
+    public static final int FILTER_APPS_SUBSTRATUM = 16;
 
     // This is the string labels for the filter modes above, the order must be kept in sync.
     public static final int[] FILTER_LABELS = new int[]{
@@ -187,6 +189,9 @@ public class ManageApplications extends InstrumentedFragment
     // whether showing system apps.
     private boolean mShowSystem;
 
+    // whether showing substratum overlays.
+    private boolean mShowSubstratum;
+
     private ApplicationsState mApplicationsState;
 
     public int mListType;
@@ -276,6 +281,7 @@ public class ManageApplications extends InstrumentedFragment
         if (savedInstanceState != null) {
             mSortOrder = savedInstanceState.getInt(EXTRA_SORT_ORDER, mSortOrder);
             mShowSystem = savedInstanceState.getBoolean(EXTRA_SHOW_SYSTEM, mShowSystem);
+            mShowSubstratum = savedInstanceState.getBoolean(EXTRA_SHOW_SUBSTRATUM, mShowSubstratum);
         }
 
         mInvalidSizeStr = getActivity().getText(R.string.invalid_size_value);
@@ -441,6 +447,7 @@ public class ManageApplications extends InstrumentedFragment
         mResetAppsHelper.onSaveInstanceState(outState);
         outState.putInt(EXTRA_SORT_ORDER, mSortOrder);
         outState.putBoolean(EXTRA_SHOW_SYSTEM, mShowSystem);
+        outState.putBoolean(EXTRA_SHOW_SUBSTRATUM, mShowSubstratum);
         outState.putBoolean(EXTRA_HAS_ENTRIES, mApplications.mHasReceivedLoadEntries);
         outState.putBoolean(EXTRA_HAS_BRIDGE, mApplications.mHasReceivedBridgeCallback);
     }
@@ -559,6 +566,11 @@ public class ManageApplications extends InstrumentedFragment
                 && mListType != LIST_TYPE_HIGH_POWER);
         mOptionsMenu.findItem(R.id.hide_system).setVisible(mShowSystem
                 && mListType != LIST_TYPE_HIGH_POWER);
+
+        mOptionsMenu.findItem(R.id.show_substratum).setVisible(!mShowSubstratum
+                && mListType != LIST_TYPE_HIGH_POWER);
+        mOptionsMenu.findItem(R.id.hide_substratum).setVisible(mShowSubstratum
+                && mListType != LIST_TYPE_HIGH_POWER);
     }
 
     @Override
@@ -578,6 +590,11 @@ public class ManageApplications extends InstrumentedFragment
                 mShowSystem = !mShowSystem;
                 mApplications.rebuild(false);
                 break;
+            case R.id.show_substratum:
+            case R.id.hide_substratum:
+                mShowSubstratum = !mShowSubstratum;
+                mApplications.rebuild(false);
+                break;
             case R.id.reset_app_preferences:
                 mResetAppsHelper.buildResetDialog();
                 return true;
@@ -866,9 +883,17 @@ public class ManageApplications extends InstrumentedFragment
             if (mOverrideFilter != null) {
                 filterObj = mOverrideFilter;
             }
-            if (!mManageApplications.mShowSystem) {
+            if (!mManageApplications.mShowSystem && !mManageApplications.mShowSubstratum) {
                 filterObj = new CompoundFilter(filterObj,
                         ApplicationsState.FILTER_DOWNLOADED_AND_LAUNCHER);
+                filterObj = new CompoundFilter(filterObj,
+                        ApplicationsState.FILTER_SUBSTRATUM);
+            } else if (!mManageApplications.mShowSystem) {
+                filterObj = new CompoundFilter(filterObj,
+                        ApplicationsState.FILTER_DOWNLOADED_AND_LAUNCHER);
+            } else if (!mManageApplications.mShowSubstratum) {
+                filterObj = new CompoundFilter(filterObj,
+                        ApplicationsState.FILTER_SUBSTRATUM);
             }
             switch (mLastSortMode) {
                 case R.id.sort_order_size:
-- 
2.1.4

